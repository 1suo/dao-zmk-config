/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
    quick_tap_ms = <200>;
};

&mt {
    quick_tap_ms = <200>;
};

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &extra_keys_transform;
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        spc1 {
            bindings = <&none>;
            key-positions = <>;
        };
    };

    macros {
        spc1: spc1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>, <&macro_tap>, <&kp SPACE &kp N1>;

            label = "SPC1";
        };
        spc2: spc2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>, <&macro_tap>, <&kp SPACE &kp NUMBER_2>;

            label = "SPC2";
        };
        lang: lang {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LEFT_SHIFT)>;
            label = "LANG";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LEFT_WIN LBKT       &kp X  &kp B  &kp Y      &kp C            &kp D        &kp H        &kp L          &kp U      &kp J  &kp K  &kp SQT
&mt LCTRL ESC           &kp R  &kp S  &kp A      &kp T            &kp G        &kp F        &kp N          &kp E      &kp I  &kp O  &mt RCTRL SEMICOLON
&mt LALT RIGHT_BRACKET  &kp Z  &kp V  &kp COMMA  &kp W            &kp GRAVE    &lang        &kp M          &kp DOT    &kp P  &kp Q  &mt RALT SLASH
                                      &lt 2 TAB  &mt LSHFT SPACE  &lt 1 RET    &lt 1 MINUS  &kp BACKSPACE  &lt 2 DEL
            >;
        };

        lower_layer {
            bindings = <
&mt LGUI F1     &kp F2    &kp F3  &kp F4     &kp F5    &kp F6       &kp F7     &kp F8    &kp F9     &kp F10   &kp F11   &kp F12
&mt LCTRL PLUS  &kp EXCL  &kp AT  &kp HASH   &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp STAR   &kp LPAR  &kp RPAR  &mt RCTRL MINUS
&mt LALT EQUAL  &kp N1    &kp N2  &kp N3     &kp N4    &kp N5       &kp N6     &kp N7    &kp N8     &kp N9    &kp N0    &kp RALT
                                  &lt 3 TAB  &trans    &trans       &trans     &trans    &lt 3 DEL
            >;
        };

        raise_layer {
            bindings = <
&mt LGUI KP_NUM  &kp KP_SLASH     &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS    &kp C_VOL_UP  &kp HOME  &kp PSCRN  &kp PG_UP  &kp C_BRI_UP   &kp CLCK
&mt LCTRL EQUAL  &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS     &kp C_MUTE    &kp LEFT  &kp UP     &kp RIGHT  &kp INS        &mt RCTRL K_APP
&kp LALT         &kp KP_N0        &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT      &kp C_VOL_DN  &kp END   &kp DOWN   &kp PG_DN  &kp C_BRI_DEC  &kp RALT
                                             &trans     &trans     &lt 3 RET       &lt 3 ESC     &trans    &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &bootloader
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&sys_reset   &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &sys_reset
                                         &trans        &none         &trans          &none         &trans        &trans
            >;
        };
    };
};
